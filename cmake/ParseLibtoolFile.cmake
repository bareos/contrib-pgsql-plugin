#include(CMakePrintHelpers)

function(parse_libtool)
    cmake_parse_arguments(LA "QUIET" "FILE;PREFIX;DOC" "HINTS;PATHS;PATH_SUFFIXES" ${ARGN})
    if (NOT LA_FILE)
        message(FATAL_ERROR "No filename!")
    endif ()
    if (LA_UNPARSED_ARGUMENTS)
        message(FATAL_ERROR "Unknown arguments ${LA_UNPARSED_ARGUMENTS}")
    endif ()
#    cmake_print_variables(LA_PREFIX LA_FILE LA_DOC LA_HINTS LA_PATHS LA_PATH_SUFFIXES)

    if (NOT LA_QUIET)
        message(STATUS "Looking for ${LA_FILE}")
    endif ()

    if (EXISTS ${LA_FILE})
        set(${LA_PREFIX} ${LA_FILE})
    else ()
        find_file(${LA_PREFIX} ${LA_FILE} HINTS ${LA_HINTS} PATHS ${LA_PATHS} PATH_SUFFIXES ${LA_PATH_SUFFIXES})
    endif ()

    if (${LA_PREFIX})
        if (NOT LA_QUIET)
            message(STATUS "Found ${LA_FILE} at ${${LA_PREFIX}}")
        endif ()
        file(STRINGS ${${LA_PREFIX}} LINES)
        foreach (L ${LINES})
            if (L MATCHES "^([a-zA-Z_]+)='?([^']*)'?")
                set(NAME ${LA_PREFIX}_${CMAKE_MATCH_1})
                string(STRIP "${CMAKE_MATCH_2}" ${NAME})
                set(${NAME} ${${NAME}} PARENT_SCOPE)
            endif ()
        endforeach ()
        set(NAME ${LA_PREFIX}_dependency_libs)
        if (${NAME})
            libtool_deps_to_libs("${${NAME}}" ${LA_PREFIX}_LIBS)
        endif ()
    else (NOT LA_QUIET)
        message(STATUS "did not find ${LA_FILE}")
    endif ()
    set(${LA_PREFIX}_LIBS "${${LA_PREFIX}_LIBS}" PARENT_SCOPE)
    set(${LA_PREFIX}_LIBS "${${LA_PREFIX}_LIBS}" CACHE STRING "Libraries required to use ${LA_FILE}")
    #    cmake_print_variables(${LA_PREFIX} ${LA_PREFIX}_LIBS)
endfunction()

function(libtool_deps_to_libs LIBS OUT)
    set(OLIBS "")
    separate_arguments(LIBS)
    foreach (L ${LIBS})
        if (L MATCHES ".la$")
            string(MAKE_C_IDENTIFIER ${L} PREFIX)
            parse_libtool(FILE ${L} PREFIX ${PREFIX} QUIET)
            list(APPEND OLIBS "${${PREFIX}_dlname};${${PREFIX}_LIBS}")
        else ()
            list(APPEND OLIBS "${L}")
        endif ()
    endforeach ()
    set(${OUT} ${OLIBS} PARENT_SCOPE)
endfunction()
